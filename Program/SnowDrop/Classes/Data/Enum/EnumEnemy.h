#pragma once
//==========================================
//
// File: EnumEnemy.h
//
// 敵　情報　列挙型			ヘッダーファイル
//
// 2016/12/24
//						Author Shinya Ueba
//==========================================

//==========================================================================
// ターゲットの種類
//==========================================================================
enum class TARGET_TYPE :int {
	NONE,
	BOY,
	BOY_ONLY,
	GIRL,
	GIRL_ONLY,
	BOTH
};


/********************************************************************
*
*
* 敵　Maidead　の列挙型 ここから
*
*
********************************************************************/


//---------------------------------------------------------
// Enum Class: MAIDEAD_STATE { int }
//
// 敵　Maidead　の状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_MAIDEAD_STATE :int
{
	IDLE = 0,//待機状態
	WANDERING = 1,
	CHASE = 2,
	UNDER_ATTACK = 3,	//攻撃を受けている状態
	DEAD = 4,			//死亡状態
};

//---------------------------------------------------------
// Enum Class: MAIDEAD_STATE { int }
//
// 敵　Maidead　の移動状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_MAIDEAD_MOVE_STATE : int
{
	WANDERING = 0,	//徘徊状態
};

enum class ENEMY_MAIDEAD_ANIMATION_STATE :int
{
	IDLE = 0,//待機状態
	WANDERING = 1,
	//CHASE = 2,
	DAED = 2,
};

enum class ENEMY_MAIDEAD_ACTION_STATE :int
{
	IDLE = 0,//待機状態
	WANDERING = 1,
	CHASE = 2,
	UNDER_ATTACK = 3,//攻撃受けた
};





/********************************************************************
*
*
* ここからまで
*
*
********************************************************************/



/********************************************************************
*
*
* 敵　Bat　の列挙型 ここから
*
*
********************************************************************/


//---------------------------------------------------------
// Enum Class: MAIDEAD_STATE { int }
//
// 敵　Maidead　の状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_BAT_STATE :int
{
	IDLE = 0,//待機状態
//	WANDERING = 1,
//	CHASE = 2,
};

//---------------------------------------------------------
// Enum Class: BAT_STATE { int }
//
// 敵　Maidead　の移動状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_BAT_MOVE_STATE : int
{
//	WANDERING = 0,	//徘徊状態
};

enum class ENEMY_BAT_ANIMATION_STATE :int
{
	IDLE = 0,//待機状態
//	WANDERING = 1,
	//	CHASE = 2,
};

enum class ENEMY_BAT_ACTION_STATE :int
{
	IDLE = 0,//待機状態
//	WANDERING = 1,
	//	CHASE = 2,
};





/********************************************************************
*
*
* ここからまで
*
*
********************************************************************/





/********************************************************************
*
*
* 敵　NutCracker　の列挙型 ここから
*
*
********************************************************************/


//---------------------------------------------------------
// Enum Class: NUTCRACKER_STATE { int }
//
// 敵　NutCracker　の状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_NUTCRACKER_STATE :int
{
	IDLE = 0,			//待機状態
	WANDERING = 1,		//徘徊状態
	CHASE = 2,			//追いかける状態
	ATTACK = 3,			//攻撃状態
	UNDER_ATTACK = 4,	//攻撃を受けている状態
	DEAD = 5,			//死亡状態
};

//---------------------------------------------------------
// Enum Class: NUTCRACKER_STATE { int }
//
// 敵　NutCracker　の移動状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_NUTCRACKER_MOVE_STATE : int
{
	WANDERING = 0,	//徘徊状態
};

enum class ENEMY_NUTCRACKER_ANIMATION_STATE :int
{
	IDLE = 0,//待機状態
	ATTACK		= 1,
	DAED = 2,
};

enum class ENEMY_NUTCRACKER_ACTION_STATE :int
{
	IDLE = 0,//待機状態
	WANDERING = 1,
	CHASE = 2,
	UNDER_ATTACK = 3,//攻撃受けた
};

/********************************************************************
*
*
* ここからまで
*
*
********************************************************************/


/********************************************************************
*
*
* 敵　Baron　の列挙型 ここから
*
*
********************************************************************/


//---------------------------------------------------------
// Enum Class: BARON_STATE { int }
//
// 敵　Baron　の状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_BARON_STATE :int
{
	IDLE = 0,			//待機状態
	WANDERING = 1,		//徘徊状態
	CHASE = 2,			//追いかける状態
	ATTACK = 3,			//攻撃状態
	UNDER_ATTACK = 4,	//攻撃を受けている状態
	DEAD = 5,			//死亡状態
};



//---------------------------------------------------------
// Enum Class: BARON_STATE { int }
//
// 敵　Baron　の移動状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_BARON_MOVE_STATE : int
{
	WANDERING = 0,	//徘徊状態
};

enum class ENEMY_BARON_ANIMATION_STATE :int
{
	IDLE = 0,//待機状態
	ATTACK = 1,
	DAED = 2,
};

enum class ENEMY_BARON_ACTION_STATE :int
{
	IDLE = 0,//待機状態
	WANDERING = 1,
	CHASE = 2,
	UNDER_ATTACK = 3,//攻撃受けた
};

/********************************************************************
*
*
* ここからまで
*
*
********************************************************************/

/********************************************************************
*
*
* 敵　MouseKing　の列挙型 ここから
*
*
********************************************************************/


//---------------------------------------------------------
// Enum Class: MOUSEKING_STATE { int }
//
// 敵　MouseKing　の状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_MOUSEKING_STATE :int
{
	IDLE = 0,			//待機状態
	WANDERING = 1,		//徘徊状態
	CHASE = 2,			//追いかける状態
	ATTACK = 3,			//攻撃状態
	UNDER_ATTACK = 4,	//攻撃を受けている状態
	DEAD = 5,			//死亡状態
};



//---------------------------------------------------------
// Enum Class: MOUSEKING_STATE { int }
//
// 敵　MouseKing　の移動状態を列挙
//
//
//---------------------------------------------------------
enum class ENEMY_MOUSEKING_MOVE_STATE : int
{
	WANDERING = 0,	//徘徊状態
};

enum class ENEMY_MOUSEKING_ANIMATION_STATE :int
{
	IDLE = 0,//待機状態
	ATTACK = 1,
	DAED = 2,
};

enum class ENEMY_MOUSEKING_ACTION_STATE :int
{
	IDLE = 0,//待機状態
	WANDERING = 1,
	CHASE = 2,
	UNDER_ATTACK = 3,//攻撃受けた
};

/********************************************************************
*
*
* ここからまで
*
*
********************************************************************/

//EOF